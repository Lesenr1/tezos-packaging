# SPDX-FileCopyrightText: 2019-2020 TQ Tezos <https://tqtezos.com/>
#
# SPDX-License-Identifier: MPL-2.0

env:
  NIX_PATH: nixpkgs=https://github.com/serokell/nixpkgs/archive/master.tar.gz

steps:
 - label: reuse lint
   command: nix run -f . pkgs.reuse -c reuse lint
 - label: check trailing whitespace
   command: .buildkite/check-trailing-whitespace.sh
 - label: crossref-verify
   command: "nix run -f https://github.com/serokell/crossref-verifier/archive/68a1f9d25b6e7835fea8299b18a3e6c61dbb2a5c.tar.gz -c crossref-verify"
   soft_fail: true

 - label: build and package via nix
   commands:
   - nix-build ./nix -A binaries -o binaries
   - nix-build ./nix -A deb -o deb-packages
   - nix-build ./nix -A rpm -o rpm-packages
   artifact_paths:
     - ./binaries/bin/*
     - ./deb-packages/*
     - ./rpm-packages/*
   branches: "!master"
 - label: test nix-built binaries
   commands:
   - buildkite-agent artifact download "binaries/bin/*" . --step "build and package via nix"
   - chmod +x ./binaries/bin/*
   - nix-build tests/tezos-binaries.nix --no-out-link --arg path-to-binaries ./binaries/bin
   branches: "!master"

 - label: build via docker
   commands:
   - cd docker
   - nix run -f.. pkgs.docker -c ./docker-static-build.sh
   - nix run -f.. pkgs.upx -c upx tezos-*
   artifact_paths:
     - ./docker/tezos-*
 - label: test docker-built binaries
   commands:
   - buildkite-agent artifact download "docker/*" . --step "build via docker"
   - chmod +x ./docker/*
   - nix-build tests/tezos-binaries.nix --no-out-link --arg path-to-binaries ./docker
   branches: "!master"

 - label: create auto pre-release
   commands:
   - mkdir binaries
   - buildkite-agent artifact download "docker/*" binaries --step "build via docker"
   - ls binaries
   - GITHUB_TOKEN=$(cat ~/niv-bot-token) ./scripts/autorelease.sh
   branches: master
